<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2020 Pulchritudinous
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="config">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queue" type="pulchQueueType"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="pulchQueueType">
        <xs:choice maxOccurs="unbounded">
            <xs:element maxOccurs="unbounded" minOccurs="1" name="worker" type="pulchWorkerType"/>
            <xs:element maxOccurs="1" minOccurs="1" name="worker_default" type="pulchWorkerDefaultType"/>
            <xs:element maxOccurs="1" minOccurs="1" name="server_default" type="pulchServerType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="pulchWorkerType">
        <xs:choice maxOccurs="unbounded">
            <xs:element maxOccurs="1" minOccurs="1" name="forge" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="priority" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="0" name="rule" type="rule"/>
            <xs:element maxOccurs="1" minOccurs="1" name="delay" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="1" name="attempts" type="moreThanZero"/>
            <xs:element maxOccurs="1" minOccurs="1" name="reschedule" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="0" name="type" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="timeout" type="moreThanZero"/>
            <xs:element maxOccurs="1" minOccurs="0" name="recurring" type="pulchRecurringType"/>
        </xs:choice>
        <xs:attribute ref="id" use="required"/>
    </xs:complexType>

    <xs:complexType name="pulchRecurringType">
        <xs:choice maxOccurs="unbounded">
            <xs:element maxOccurs="1" minOccurs="1" name="schedule" type="scheduleDeclaration"/>
            <xs:element maxOccurs="1" minOccurs="0" name="is_allowed" type="staticCall"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="pulchWorkerDefaultType">
        <xs:choice maxOccurs="unbounded">
            <xs:element maxOccurs="1" minOccurs="1" name="priority" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="0" name="rule" type="rule"/>
            <xs:element maxOccurs="1" minOccurs="1" name="delay" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="1" name="attempts" type="moreThanZero"/>
            <xs:element maxOccurs="1" minOccurs="1" name="reschedule" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="1" name="type" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="timeout" type="moreThanZero"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="pulchServerType">
        <xs:choice maxOccurs="unbounded">
            <xs:element maxOccurs="1" minOccurs="1" name="threads" type="moreThanZero"/>
            <xs:element maxOccurs="1" minOccurs="1" name="poll" type="zeroOrMore"/>
            <xs:element maxOccurs="1" minOccurs="1" name="recurring" type="pulchServerRecurringType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="pulchServerRecurringType">
        <xs:choice maxOccurs="unbounded">
            <xs:element maxOccurs="1" minOccurs="1" name="plan_ahead_min" type="moreThanZero"/>
            <xs:element maxOccurs="1" minOccurs="1" name="resolution" type="moreThanZero"/>
        </xs:choice>
    </xs:complexType>

    <xs:attribute name="id">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:pattern value="[a-z_]*"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:attribute>

    <xs:simpleType name="lockStorage">
        <xs:restriction base="xs:string">
            <xs:pattern value="(db|file)"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="staticCall">
        <xs:restriction base="xs:string">
            <xs:pattern value="[\w\\]+::\w+(\(\))?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="rule">
        <xs:restriction base="xs:string">
            <xs:pattern value="(wait|batch|ignore|replace)"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="zeroOrMore">
       <xs:restriction base="xs:integer">
          <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="moreThanZero">
       <xs:restriction base="xs:integer">
          <xs:minInclusive value="1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="scheduleDeclaration">
        <xs:restriction base="listOfTimePatterns">
            <xs:minLength value="5"/>
            <xs:maxLength value="5"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="listOfTimePatterns">
        <xs:list itemType="xs:string"/>
    </xs:simpleType>
</xs:schema>

